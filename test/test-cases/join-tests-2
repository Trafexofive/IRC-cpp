# IRC Protocol Test Suite
# Based on RFC 2812 and modern IRC protocol extensions
# Each test case follows the format:
# TestName|ExpectedResponse|Commands

# ---------------------------------------------------------------------
# TEST CASES USING AUTH KEYWORD
# ---------------------------------------------------------------------

# COMMAND-TO-TEST: AUTH

# Test Case 1: Authenticate and join a public channel without a key
AUTH|Authenticate and join public channel|
AUTH|Alilepro135!|test_user|user|
:server 353 test_user = #public_channel :@test_user\r\n:server 366 test_user #public_channel :End of /NAMES list.|
PASS Alilepro135!\r\nNICK test_user\r\nUSER user 0 * :Test User\r\nJOIN #public_channel\r\n

# Test Case 2: Attempt to authenticate with incorrect password
AUTH|Authentication fails with wrong password|
AUTH|WrongPassword!|test_user|user|
:server NOTICE * :Password incorrect\r\n:server ERR_PASSWDMISMATCH test_user :Password incorrect\r\n|
PASS WrongPassword!\r\nNICK test_user\r\nUSER user 0 * :Test User\r\n

# Test Case 3: Authenticate and join a private channel with a key
AUTH|Authenticate and join private channel with key|
AUTH|Alilepro135!|priv_user|user_priv|
:server 353 priv_user = #private_channel :@priv_user\r\n:server 366 priv_user #private_channel :End of /NAMES list.|
PASS Alilepro135!\r\nNICK priv_user\r\nUSER user_priv 0 * :Private User\r\nJOIN #private_channel key123\r\n

# ---------------------------------------------------------------------
# TEST CASES USING TRADITIONAL COMMANDS
# ---------------------------------------------------------------------

# Test Case 4: Authenticate using separate PASS, NICK, and USER commands and join a channel
SeparateAuth|Separate PASS, NICK, USER commands to authenticate|
:server 353 separate_user = #general_channel :@separate_user\r\n:server 366 separate_user #general_channel :End of /NAMES list.|
PASS Alilepro135!\r\nNICK separate_user\r\nUSER user_sep 0 * :Separate User\r\nJOIN #general_channel\r\n

# Test Case 5: Join without authenticating
NoAuth|Attempt to join a channel without authentication|
:server NOTICE * :You are not registered\r\n:server ERR_NOTREGISTERED * :You have not registered\r\n|
NICK unauth_user\r\nJOIN #no_auth_channel\r\n

# Test Case 6: Authenticate and send a message to a channel
AuthMessage|Authenticate and send a message to a channel|
:server 353 msg_user = #chat_channel :@msg_user\r\n:server 366 msg_user #chat_channel :End of /NAMES list.\r\n:msg_user!user@host PRIVMSG #chat_channel :Hello, everyone!\r\n|
AUTH|Alilepro135!|msg_user|user_msg|
PASS Alilepro135!\r\nNICK msg_user\r\nUSER user_msg 0 * :Message User\r\nJOIN #chat_channel\r\nPRIVMSG #chat_channel :Hello, everyone!\r\n

# ---------------------------------------------------------------------
# NOTES:
# - Each test case is separated by a blank line for readability.
# - The AUTH keyword is used to simplify authentication by replacing PASS, NICK, and USER commands.
# - Expected responses are based on successful or failed authentication and subsequent actions.
# - Ensure that the IRC server is configured to handle these test cases appropriately.
